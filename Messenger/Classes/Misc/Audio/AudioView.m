//
// Copyright (c) 2018 Related Code - http://relatedcode.com
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

#import "AudioView.h"

//-------------------------------------------------------------------------------------------------------------------------------------------------
@interface AudioView()
{
	BOOL isPlaying;
	BOOL isRecorded;
	BOOL isRecording;

	NSTimer *timer;
	NSDate *dateTimer;

	AVAudioPlayer *audioPlayer;
	AVAudioRecorder *audioRecorder;
}

@property (strong, nonatomic) IBOutlet UILabel *labelTimer;
@property (strong, nonatomic) IBOutlet UIButton *buttonRecord;
@property (strong, nonatomic) IBOutlet UIButton *buttonStop;
@property (strong, nonatomic) IBOutlet UIButton *buttonDelete;
@property (strong, nonatomic) IBOutlet UIButton *buttonPlay;
@property (strong, nonatomic) IBOutlet UIButton *buttonSend;

@end
//-------------------------------------------------------------------------------------------------------------------------------------------------

@implementation AudioView

@synthesize delegate;
@synthesize labelTimer, buttonRecord, buttonStop, buttonDelete, buttonPlay, buttonSend;

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)viewDidLoad
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	[super viewDidLoad];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	self.title = @"Audio";
	//---------------------------------------------------------------------------------------------------------------------------------------------
	self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemCancel target:self
																						  action:@selector(actionCancel)];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	isPlaying = isRecorded = isRecording = NO;
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[self updateButtonDetails];
}

#pragma mark - User actions

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)actionCancel
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	[self actionStop:nil];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[self dismissViewControllerAnimated:YES completion:nil];
}

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (IBAction)actionRecord:(id)sender
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	[self audioRecorderStart];
}

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (IBAction)actionStop:(id)sender
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	if (isPlaying)		[self audioPlayerStop];
	if (isRecording)	[self audioRecorderStop];
}

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (IBAction)actionDelete:(id)sender
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	isRecorded = NO;
	[self updateButtonDetails];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[self timerReset];
}

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (IBAction)actionPlay:(id)sender
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	[self audioPlayerStart];
}

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (IBAction)actionSend:(id)sender
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	[self dismissViewControllerAnimated:YES completion:nil];
	if (delegate != nil) [delegate didRecordAudio:audioRecorder.url.path];
}

#pragma mark - Audio recorder methods

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)audioRecorderStart
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	isRecording = YES;
	[self updateButtonDetails];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[self timerStart];
	//---------------------------------------------------------------------------------------------------------------------------------------------

	//---------------------------------------------------------------------------------------------------------------------------------------------
	AVAudioSession *audioSession = [AVAudioSession sharedInstance];
	[audioSession setCategory:AVAudioSessionCategoryPlayAndRecord withOptions:AVAudioSessionCategoryOptionDefaultToSpeaker error:nil];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	NSDictionary *settings = @{AVFormatIDKey:@(kAudioFormatMPEG4AAC), AVSampleRateKey:@44100, AVNumberOfChannelsKey:@2};
	audioRecorder = [[AVAudioRecorder alloc] initWithURL:[NSURL fileURLWithPath:[File temp:@"m4a"]] settings:settings error:nil];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[audioRecorder prepareToRecord];
	[audioRecorder record];
}

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)audioRecorderStop
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	isRecording = NO;
	isRecorded = YES;
	[self updateButtonDetails];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[self timerStop];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[audioRecorder stop];
}

#pragma mark - Audio player methods

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)audioPlayerStart
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	isPlaying = YES;
	[self updateButtonDetails];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[self timerStart];
	//---------------------------------------------------------------------------------------------------------------------------------------------

	//---------------------------------------------------------------------------------------------------------------------------------------------
	AVAudioSession *audioSession = [AVAudioSession sharedInstance];
	[audioSession setCategory:AVAudioSessionCategoryPlayback withOptions:AVAudioSessionCategoryOptionDefaultToSpeaker error:nil];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:audioRecorder.url error:nil];
	audioPlayer.delegate = self;
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[audioPlayer prepareToPlay];
	[audioPlayer play];
}

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer *)player successfully:(BOOL)flag
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	isPlaying = NO;
	[self updateButtonDetails];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[self timerStop];
}

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)audioPlayerStop
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	isPlaying = NO;
	[self updateButtonDetails];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[self timerStop];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	[audioPlayer stop];
}

#pragma mark - Timer methods

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)timerStart
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	dateTimer = [NSDate date];
	//---------------------------------------------------------------------------------------------------------------------------------------------
	timer = [NSTimer scheduledTimerWithTimeInterval:0.07 target:self selector:@selector(timerUpdate) userInfo:nil repeats:YES];
	[[NSRunLoop mainRunLoop] addTimer:timer forMode:NSRunLoopCommonModes];
}

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)timerUpdate
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	NSTimeInterval interval = [[NSDate date] timeIntervalSinceDate:dateTimer];
	int millisec = (int) (interval * 100) % 100;
	int seconds = (int) interval % 60;
	int minutes = (int) interval / 60;
	labelTimer.text = [NSString stringWithFormat:@"%02d:%02d:%02d", minutes, seconds, millisec];
}

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)timerStop
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	[timer invalidate];
	timer = nil;
}

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)timerReset
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	labelTimer.text = @"00:00:00";
}

#pragma mark - Helper methods

//-------------------------------------------------------------------------------------------------------------------------------------------------
- (void)updateButtonDetails
//-------------------------------------------------------------------------------------------------------------------------------------------------
{
	buttonRecord.hidden	= isRecorded;
	buttonStop.hidden	= ((isPlaying == NO) && (isRecording == NO));
	buttonDelete.hidden	= ((isPlaying == YES) || (isRecorded == NO));
	buttonPlay.hidden	= ((isPlaying == YES) || (isRecorded == NO));
	buttonSend.hidden	= ((isPlaying == YES) || (isRecorded == NO));
}

@end
